@use 'sass:math';
@use 'sass:meta';
@use 'sass:string';
// 小数点以下切り捨て
@function floor-decimal($number, $digits: 0) {
  @return to-fixed($number, $digits, 'floor');
}

// 数値制御
@function to-fixed($number, $digits: 0, $round: 'round') {
  $n: 1;
  // $number must be a number
  @if meta.type-of($number) != number {
    @warn '#{ $number } is not a number.';
    @return $number;
  }
  // $digits must be a unitless number
  @if meta.type-of($digits) != number {
    @warn '#{ $digits } is not a number.';
    @return $number;
  } @else if not math.is-unitless($digits) {
    @warn '#{ $digits } has a unit.';
    @return $number;
  }
  @for $i from 1 through $digits {
    $n: $n * 10;
  }

  @if $round == 'round' {
    @return math.round($number * $n) / $n;
  } @else if $round == 'ceil' {
    @return math.ceil($number * $n) / $n;
  } @else if $round == 'floor' {
    @return math.floor($number * $n) / $n;
  } @else {
    @warn '#{ $round } is undefined keyword.';
    @return $number;
  }
}

// calitalize
@function capitalize($str) {
  @return (
    string.to-upper-case(string.slice($str, 0, 1)) + string.slice($str, 2)
  );
}
